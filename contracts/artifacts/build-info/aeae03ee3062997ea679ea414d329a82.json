{
	"id": "aeae03ee3062997ea679ea414d329a82",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Loop.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.26;\r\n\r\ncontract Loop{\r\n    uint public  showI;\r\n    function loop() public {\r\n        uint i =0;\r\n        for(i;i<10;i++){\r\n               if (i == 3) {\r\n                // Skip to next iteration with continue\r\n                continue;\r\n            }\r\n            if (i == 5) {\r\n                // Exit loop with break\r\n                showI=i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Loop.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "loop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Loop.sol\":66:464  contract Loop{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Loop.sol\":66:464  contract Loop{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3a6824ad\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa92100cb\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Loop.sol\":86:104  uint public  showI */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Loop.sol\":111:461  function loop() public {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/Loop.sol\":86:104  uint public  showI */\n    tag_6:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Loop.sol\":111:461  function loop() public {... */\n    tag_10:\n        /* \"contracts/Loop.sol\":145:151  uint i */\n      0x00\n        /* \"contracts/Loop.sol\":165:454  for(i;i<10;i++){... */\n    tag_12:\n        /* \"contracts/Loop.sol\":173:175  10 */\n      0x0a\n        /* \"contracts/Loop.sol\":171:172  i */\n      dup2\n        /* \"contracts/Loop.sol\":171:175  i<10 */\n      lt\n        /* \"contracts/Loop.sol\":165:454  for(i;i<10;i++){... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/Loop.sol\":207:208  3 */\n      0x03\n        /* \"contracts/Loop.sol\":202:203  i */\n      dup2\n        /* \"contracts/Loop.sol\":202:208  i == 3 */\n      sub\n        /* \"contracts/Loop.sol\":198:310  if (i == 3) {... */\n      iszero\n        /* \"contracts/Loop.sol\":286:294  continue */\n      tag_14\n        /* \"contracts/Loop.sol\":198:310  if (i == 3) {... */\n      jumpi\n        /* \"contracts/Loop.sol\":333:334  5 */\n      0x05\n        /* \"contracts/Loop.sol\":328:329  i */\n      dup2\n        /* \"contracts/Loop.sol\":328:334  i == 5 */\n      sub\n        /* \"contracts/Loop.sol\":324:443  if (i == 5) {... */\n      tag_16\n      jumpi\n        /* \"contracts/Loop.sol\":402:403  i */\n      dup1\n        /* \"contracts/Loop.sol\":396:401  showI */\n      0x00\n        /* \"contracts/Loop.sol\":396:403  showI=i */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Loop.sol\":422:427  break */\n      jump(tag_13)\n        /* \"contracts/Loop.sol\":324:443  if (i == 5) {... */\n    tag_16:\n        /* \"contracts/Loop.sol\":165:454  for(i;i<10;i++){... */\n    tag_14:\n        /* \"contracts/Loop.sol\":176:179  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Loop.sol\":165:454  for(i;i<10;i++){... */\n      jump(tag_12)\n    tag_13:\n        /* \"contracts/Loop.sol\":134:461  {... */\n      pop\n        /* \"contracts/Loop.sol\":111:461  function loop() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_17:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_18:\n        /* \"#utility.yul\":177:201   */\n      tag_22\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_17\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_24\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_18\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d82d75f4492551edd2f8c812778833cb3175461a0a1baae34f9b74d96ec18d3a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060f18061001b5f395ff3fe6080604052348015600e575f80fd5b50600436106030575f3560e01c80633a6824ad146034578063a92100cb14604e575b5f80fd5b603a6056565b6040516045919060a4565b60405180910390f35b6054605b565b005b5f5481565b5f5b600a811015608b576003810315607f5760058103607e57805f81905550608b565b5b8080600101915050605d565b50565b5f819050919050565b609e81608e565b82525050565b5f60208201905060b55f8301846097565b9291505056fea2646970667358221220d82d75f4492551edd2f8c812778833cb3175461a0a1baae34f9b74d96ec18d3a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF1 DUP1 PUSH2 0x1B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A6824AD EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH1 0x4E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3A PUSH1 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x45 SWAP2 SWAP1 PUSH1 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x54 PUSH1 0x5B JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0x8B JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH1 0x7F JUMPI PUSH1 0x5 DUP2 SUB PUSH1 0x7E JUMPI DUP1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH1 0x8B JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0x5D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9E DUP2 PUSH1 0x8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB5 PUSH0 DUP4 ADD DUP5 PUSH1 0x97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0x2D PUSH22 0xF4492551EDD2F8C812778833CB3175461A0A1BAAE34F SWAP12 PUSH21 0xD96EC18D3A64736F6C634300081A00330000000000 ",
							"sourceMap": "66:398:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loop_37": {
									"entryPoint": 91,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@showI_3": {
									"entryPoint": 86,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:439:1",
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106030575f3560e01c80633a6824ad146034578063a92100cb14604e575b5f80fd5b603a6056565b6040516045919060a4565b60405180910390f35b6054605b565b005b5f5481565b5f5b600a811015608b576003810315607f5760058103607e57805f81905550608b565b5b8080600101915050605d565b50565b5f819050919050565b609e81608e565b82525050565b5f60208201905060b55f8301846097565b9291505056fea2646970667358221220d82d75f4492551edd2f8c812778833cb3175461a0a1baae34f9b74d96ec18d3a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A6824AD EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH1 0x4E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3A PUSH1 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x45 SWAP2 SWAP1 PUSH1 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x54 PUSH1 0x5B JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0x8B JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH1 0x7F JUMPI PUSH1 0x5 DUP2 SUB PUSH1 0x7E JUMPI DUP1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH1 0x8B JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0x5D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9E DUP2 PUSH1 0x8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB5 PUSH0 DUP4 ADD DUP5 PUSH1 0x97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0x2D PUSH22 0xF4492551EDD2F8C812778833CB3175461A0A1BAAE34F SWAP12 PUSH21 0xD96EC18D3A64736F6C634300081A00330000000000 ",
							"sourceMap": "66:398:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;86:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;111:350;;;:::i;:::-;;86:18;;;;:::o;111:350::-;145:6;165:289;173:2;171:1;:4;165:289;;;207:1;202;:6;198:112;286:8;198:112;333:1;328;:6;324:119;;402:1;396:5;:7;;;;422:5;;324:119;165:289;176:3;;;;;;;165:289;;;134:327;111:350::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "48200",
								"executionCost": "97",
								"totalCost": "48297"
							},
							"external": {
								"loop()": "infinite",
								"showI()": "2402"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 464,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 464,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 464,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 464,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 464,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 464,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 464,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 464,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 464,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d82d75f4492551edd2f8c812778833cb3175461a0a1baae34f9b74d96ec18d3a64736f6c634300081a0033",
									".code": [
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "3A6824AD"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 86,
											"end": 104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 86,
											"end": 104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 86,
											"end": 104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 86,
											"end": 104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 86,
											"end": 104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 111,
											"end": 461,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 111,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 111,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 111,
											"end": 461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 111,
											"end": 461,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 111,
											"end": 461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 111,
											"end": 461,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 86,
											"end": 104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 104,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 111,
											"end": 461,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 111,
											"end": 461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 145,
											"end": 151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 165,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 171,
											"end": 172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 171,
											"end": 175,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 165,
											"end": 454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 165,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 165,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 207,
											"end": 208,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 202,
											"end": 203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 202,
											"end": 208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 198,
											"end": 310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 286,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 198,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 333,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 328,
											"end": 329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 328,
											"end": 334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 324,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 324,
											"end": 443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 402,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 403,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 396,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 443,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 324,
											"end": 443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 165,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 165,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 179,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 176,
											"end": 179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 176,
											"end": 179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 165,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 165,
											"end": 454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 165,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 165,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 111,
											"end": 461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Loop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"loop()": "a92100cb",
							"showI()": "3a6824ad"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Loop.sol\":\"Loop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Loop.sol\":{\"keccak256\":\"0xd09f4399a61672b81d2693de24a182ac78a002a8ebc1a01ac13805582c50c99f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f9d3efa4b335b294cc5ca764364e50c6339b7bcd3b691aa925d21d889d00d281\",\"dweb:/ipfs/QmRoiyFRyCwW2gugy9hUwdLGLz3kTX9XajgsSoM6Juhd2Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Loop.sol:Loop",
								"label": "showI",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Loop.sol": {
				"ast": {
					"absolutePath": "contracts/Loop.sol",
					"exportedSymbols": {
						"Loop": [
							38
						]
					},
					"id": 39,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "Loop",
							"nameLocation": "75:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3a6824ad",
									"id": 3,
									"mutability": "mutable",
									"name": "showI",
									"nameLocation": "99:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "86:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "86:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "134:327:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "150:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 36,
														"src": "145:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 6,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "145:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 9,
												"initialValue": {
													"hexValue": "30",
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "153:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "145:9:0"
											},
											{
												"body": {
													"id": 34,
													"nodeType": "Block",
													"src": "180:274:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 18,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "202:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "207:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "202:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 23,
															"nodeType": "IfStatement",
															"src": "198:112:0",
															"trueBody": {
																"id": 22,
																"nodeType": "Block",
																"src": "210:100:0",
																"statements": [
																	{
																		"id": 21,
																		"nodeType": "Continue",
																		"src": "286:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 24,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "333:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "328:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 33,
															"nodeType": "IfStatement",
															"src": "324:119:0",
															"trueBody": {
																"id": 32,
																"nodeType": "Block",
																"src": "336:107:0",
																"statements": [
																	{
																		"expression": {
																			"id": 29,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 27,
																				"name": "showI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3,
																				"src": "396:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 28,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 7,
																				"src": "402:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "396:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 30,
																		"nodeType": "ExpressionStatement",
																		"src": "396:7:0"
																	},
																	{
																		"id": 31,
																		"nodeType": "Break",
																		"src": "422:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 12,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "171:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "173:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "171:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 35,
												"initializationExpression": {
													"expression": {
														"id": 10,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 11,
													"nodeType": "ExpressionStatement",
													"src": "169:1:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "176:3:0",
														"subExpression": {
															"id": 15,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "176:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 17,
													"nodeType": "ExpressionStatement",
													"src": "176:3:0"
												},
												"nodeType": "ForStatement",
												"src": "165:289:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "120:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "134:0:0"
									},
									"scope": 38,
									"src": "111:350:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 39,
							"src": "66:398:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:425:0"
				},
				"id": 0
			}
		}
	}
}